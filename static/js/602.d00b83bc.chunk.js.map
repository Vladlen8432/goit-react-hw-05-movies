{"version":3,"file":"static/js/602.d00b83bc.chunk.js","mappings":"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","sources":["pages/CastPage.jsx","pages/MovieDetailsPage.jsx","pages/ReviewsPage.jsx","services/Api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getCast } from 'services/Api';\n\nconst CastPage = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const castData = await getCast(movieId);\n        setCast(castData);\n      } catch (error) {\n        console.error('Error fetching cast data:', error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n              alt={actor.name}\n            />\n            {actor.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CastPage;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../services/Api';\nimport CastPage from './CastPage';\nimport ReviewsPage from './ReviewsPage';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const details = await getMovieDetails(movieId);\n        console.log('Movie details from component:', details);\n        setMovieDetails(details);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      {movieDetails ? (\n        <div>\n          <h2>{movieDetails.title}</h2>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`}\n            alt={movieDetails.title}\n          />\n          <p>{movieDetails.overview}</p>\n          <p>Release Date: {movieDetails.release_date}</p>\n          <p>Vote Average: {movieDetails.vote_average}</p>\n          <p>Runtime: {movieDetails.runtime} minutes</p>\n\n          <CastPage movieId={movieId} />\n          <ReviewsPage movieId={movieId} />\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n\n// return (\n//   <div>\n//     <h1>{movieDetails.title}</h1>\n//     <p>{movieDetails.overview}</p>\n\n//     <p>Release Date: {movieDetails.release_date}</p>\n//     <p>Vote Average: {movieDetails.vote_average}</p>\n//     <p>Runtime: {movieDetails.runtime} minutes</p>\n\n//     <CastPage movieId={id} />\n//     <ReviewsPage movieId={id} />\n//   </div>\n// );\n","import { useEffect, useState } from 'react';\nimport { getReviews } from 'services/Api';\n\nconst ReviewsPage = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsData = await getReviews(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.error('Error fetching reviews data:', error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ReviewsPage;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'af62c948c73d11660c8d6ea2e76a9d91';\n\nexport const getTrandingMovies = async () => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n"],"names":["_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","castData","_context","prev","next","getCast","sent","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","map","actor","src","concat","profile_path","alt","name","id","useParams","movieDetails","setMovieDetails","fetchMovieDetails","details","getMovieDetails","log","title","poster_path","overview","release_date","vote_average","runtime","CastPage","ReviewsPage","reviews","setReviews","fetchReviews","reviewsData","getReviews","review","author","content","axios","API_KEY","getTrandingMovies","_yield$axios$get","data","abrupt","results","getMoviesByQuery","_callee2","query","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}