{"version":3,"file":"static/js/983.55566b02.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","hooks/useFetchTrending.js","hooks/useFetchByQuery.js","pages/HomePage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=500x250';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title, name, original_title, poster_path }) => (\n        <li key={id}>\n          <Link state={{ from: location }} key={id} to={`/movies/${id}`}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                  : defaultImg\n              }\n              alt={title || name || original_title}\n            />\n            <h2>{title || name || original_title}</h2>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { getTrandingMovies } from 'services/Api';\n\nexport const useFetchTrending = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      try {\n        const data = await getTrandingMovies();\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return { movies, isLoading, error };\n};\n","import { useEffect, useState } from \"react\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { getMoviesByQuery } from \"services/Api\"\n\nexport const useFetchByQuery = () => {\n    const [movies, setMovies] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n    const [searchParams, setSearchParams] = useSearchParams()\n    const query = searchParams.get('q')\n\n    useEffect(() => {\n        if(!query) {\n            return\n        }\n        setIsLoading(true)\n\n        const fetchData = async () => {\n            try {\n               const data = await getMoviesByQuery(query)\n                setMovies(data)\n            } catch (error) {\n                setError(error)\n            }\n\n            finally {\n                setIsLoading(false)\n            }\n        }\n        fetchData()\n    }, [query])\n\n    const onHandleSubmit = value => {\n        setSearchParams({q: value})\n    }\n\n  return {movies, isLoading, error, onHandleSubmit}\n}\n\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useFetchTrending } from 'hooks';\n\nconst HomePage = () => {\n  const { movies, isLoading, error } = useFetchTrending();\n\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Something went wrong</p>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","name","original_title","poster_path","_jsxs","Link","state","from","to","concat","src","alt","useFetchTrending","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getTrandingMovies","sent","t0","finish","stop","apply","arguments","useFetchByQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","getMoviesByQuery","onHandleSubmit","value","q","_useFetchTrending","_Fragment","length","MoviesList"],"sourceRoot":""}